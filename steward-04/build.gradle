// 모듈 식별 정보
group 'world.sai.steward'
version '1.0.0-SNAPSHOT'

ext {
    queryDslVersion = '3.6.9'
}

buildscript {
    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
        maven {
            url "http://repo.gradle.org/gradle/repo"
        }
        maven { url 'http://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath 'com.h2database:h2:1.3.170'
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE")
        classpath 'org.springframework:springloaded:1.2.5.RELEASE'
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.7' // support 'provided', 'optional' scope
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'


// support 'provided', 'optional' scope
configure(allprojects) {
    apply plugin: 'propdeps'
    apply plugin: 'propdeps-maven'
    apply plugin: 'propdeps-idea'
    apply plugin: 'propdeps-eclipse'
}


sourceCompatibility = 1.8
targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven {
        url "http://repo.gradle.org/gradle/repo"
    }
    maven { url "http://repo.spring.io/release" }
    maven { url "http://repo.spring.io/libs-snapshot" }
}

configurations {
    providedRuntime
}

configurations {
    querydslapt
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
    provided "org.projectlombok:lombok:1.16.6"
    compile 'commons-io:commons-io:2.4'
    compile 'com.h2database:h2'
    compile group: 'org.modelmapper', name: 'modelmapper', version: '0.7.5'
    compile group: 'org.modelmapper.extensions', name: 'modelmapper-spring', version: '0.7.5'

    compile group: 'com.mysema.querydsl', name: 'querydsl-core', version: queryDslVersion
    compile group: 'com.mysema.querydsl', name: 'querydsl-jpa', version: queryDslVersion
    querydslapt group: 'com.mysema.querydsl', name: 'querydsl-apt', version: queryDslVersion
}

bootRepackage {
    mainClass = 'world.sai.steward.bootstrap.Application'
    enabled = true
}

sourceSets {
    generated {
        java {
            srcDirs = ['src/main/generated']
        }
    }
}


task generateQueryDSL(type: JavaCompile, group: 'build') {
    source = sourceSets.main.java
    classpath = configurations.compile + configurations.querydslapt
    options.compilerArgs = [
            "-proc:only",
            "-processor", "com.mysema.query.apt.jpa.JPAAnnotationProcessor"
    ]
    destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}

compileJava {
    dependsOn generateQueryDSL
    source generateQueryDSL.destinationDir
}

compileGeneratedJava {
    dependsOn generateQueryDSL
    options.warnings = false
    classpath += sourceSets.main.runtimeClasspath
}


clean {
    delete sourceSets.generated.java.srcDirs
}


idea {
    module {
        sourceDirs += file('src/main/generated/')
        generatedSourceDirs += file('src/main/generated/')
    }
}